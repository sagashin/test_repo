Option Explicit
'==============================================
' Link Register Builder  (depth 列付き、100 行未満)
'==============================================
Sub BuildLinkRegister()
    Const WS_NAME As String = "Link_Register"
    Const ROOT_CELL As String = "Summary!B2"   '← 根とするセル (シート!セル)

    Dim wsOut As Worksheet, nxtRow As Long, sh As Worksheet
    Dim rngF As Range, c As Range, f As String, typ As String, tgt As String
    Dim links, i As Long, dictDepth As Object: Set dictDepth = CreateObject("Scripting.Dictionary")
    
    '--- 0) Root 距離計算用の仮 Dictionary -------------
    If Not IsError(RangeExists(ROOT_CELL)) Then
        dictDepth(ROOT_CELL) = 0
    End If

    '--- 1) 既存シート削除 → 新規作成 ---------------
    Application.DisplayAlerts = False
    On Error Resume Next: Worksheets(WS_NAME).Delete: On Error GoTo 0
    Application.DisplayAlerts = True
    
    Set wsOut = Worksheets.Add(Before:=Sheets(1))
    wsOut.Name = WS_NAME
    wsOut.Range("A1:G1").Value = Array("#", "Sheet", "Cell", "Type", "Target", "Note", "Depth")
    nxtRow = 2
    
    '--- 2) 外部ソース一覧 -----------------------------
    links = ActiveWorkbook.LinkSources(xlExcelLinks)
    If Not IsEmpty(links) Then
        For i = LBound(links) To UBound(links)
            WriteRow wsOut, nxtRow, "", "", "External Source", links(i), "", ""
        Next i
    End If
    
    '--- 3) シートを回って数式セルを走査 ---------------
    For Each sh In Worksheets
        If sh.Name <> WS_NAME Then
            On Error Resume Next
            Set rngF = sh.UsedRange.SpecialCells(xlCellTypeFormulas)
            On Error GoTo 0
            
            If Not rngF Is Nothing Then
                For Each c In rngF
                    f = c.Formula
                    typ = IIf(InStr(f, "[") > 0, "External", _
                              IIf(InStr(f, "!") > 0, "Internal", ""))
                    If typ <> "" Then
                        tgt = FirstRef(f)
                        WriteRow wsOut, nxtRow, sh.Name, c.Address(False, False), typ, tgt, "", ""
                        ' --- Depth 計算：簡易 BFS -------------
                        If dictDepth.Exists(tgt) Then
                            dictDepth(sh.Name & "!" & c.Address(False, False)) = dictDepth(tgt) + 1
                        End If
                    End If
                Next c
            End If
            Set rngF = Nothing
        End If
    Next sh
    
    '--- 4) Depth を台帳へ書き戻し ---------------------
    Dim r As Long
    For r = 2 To nxtRow - 1
        tgt = wsOut.Cells(r, 2).Value & "!" & wsOut.Cells(r, 3).Value
        If dictDepth.Exists(tgt) Then wsOut.Cells(r, 7).Value = dictDepth(tgt)
    Next r
    
    wsOut.Columns.AutoFit
    MsgBox "Link register refreshed: " & nxtRow - 2 & " rows", vbInformation
End Sub

'---------------------------------
' 数式先頭の参照セルを抽出
'---------------------------------
Private Function FirstRef(ByVal f As String) As String
    Dim m As Object, reg As Object
    Set reg = CreateObject("VBScript.RegExp")
    reg.Pattern = "('([^']+)'|[A-Za-z0-9_]+)?!?[$]?[A-Z]{1,3}[$]?\d+"
    reg.Global = False
    If reg.Test(f) Then
        Set m = reg.Execute(f)(0)
        FirstRef = m.Value
    End If
End Function

'---------------------------------
' 出力ヘルパー
'---------------------------------
Private Sub WriteRow(ws As Worksheet, ByRef r As Long, _
                     sht As String, addr As String, typ As String, _
                     tgt As String, note As String, dep As Variant)
    ws.Cells(r, 1).Value = r - 1
    ws.Cells(r, 2).Value = sht
    ws.Cells(r, 3).Value = addr
    ws.Cells(r, 4).Value = typ
    ws.Cells(r, 5).Value = tgt
    ws.Cells(r, 6).Value = note
    If Not IsEmpty(dep) Then ws.Cells(r, 7).Value = dep
    r = r + 1
End Sub

'---------------------------------
' 参照セルが存在するか単純判定
'---------------------------------
Private Function RangeExists(ref As String) As Boolean
    On Error Resume Next
    RangeExists = Not Application.Evaluate(ref) Is Nothing
    On Error GoTo 0
End Function