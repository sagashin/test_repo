以下が全体のコードです。これにBranchを追加するようにできますか。
PROC SQL ;
	CONNECT TO oracle AS aiuprod (user=&orcluser2 orapw=&orclpw2 path="&orclpath2"/*USER= "" ORAPW= "" PATH= "AIDWHP1_CMAN"*/) ;

	CREATE TABLE sasds.data_1 AS
	SELECT *
	FROM CONNECTION TO aiuprod (
		SELECT
		    /*分析に必要な集計キーはここから*/
		    fact.KEY_POLICY_NO,
			fact.KEY_POLICY_ITEMNO,
			fact.KEY_ORIG_INS_EFFECT_YY,
			fact.KEY_COMPANY_CD,
			fact.KEY_EXTRACT_MASTER_FLG,
            fact.ORIG_INS_COMPANY_CD,
			fact.NEW_RENEWAL_TYP, /*added 20250730*/
			ep_summ.EARNED_YYM,
			product.AUTO_PRODUCT_CD,
			product.FLEET_FLG,
			product.PRODUCT_NAME,
			military.MILITARY_CARCLASS_CD,
			military.MILITARY_GRADE_CD,
			military.MILITARY_OD_A_INSURED_AMT,
			military.MILITARY_OD_A_PRM,
			military.MILITARY_OD_B_INSURED_AMT,
			military.MILITARY_OD_B_PRM,
			military.MILITARY_DISCOUNT_RATE,
			military.MILITARY_SHORTTERM_RATE,
			military.MILITARY_AO_CD,
			plhldr.CRESTA_ZONE,
			plhldr.CRESTA_CD,
			plhldr.AREA_NAME,
			plhldr.ADDRESS_CD,
			addrss.ADDRESS_NAME_KN,
			addrss.ADDRESS_NAME_KJ,
			addrss.NEW_ZIP,
			/*分析に必要な集計キーはここまで*/
			sum(ep_summ.TOTAL_EARNED_PRM) AS total_ep,
			sum(ep_summ.OD_EARNED_PRM) AS od_ep,
			sum(ep_summ.BI_EARNED_PRM) AS bi_ep,
			sum(ep_summ.PD_EARNED_PRM) AS pd_ep,
			sum(ep_summ.PA_EARNED_PRM) AS pa_ep,
			sum(ep_summ.PIC_EARNED_PRM) AS pic_ep,
			sum(ep_summ.ESCORTP_EARNED_PRM) AS escortp_ep,
			sum(ep_summ.BIKE50CC_EARNED_PRM) AS bike50cc_ep,
			sum(ep_summ.OTHERS_EARNED_PRM) AS others_ep,
			sum(ep_summ.TOTAL_NOVE) AS total_nove
		FROM
			PFM_AUTO_FACT fact,
			PFM_AUTO_MILITARY military,
			PFM_AUTO_EP_SUMM ep_summ,
			PFM_AUTO_PRODUCT product,
			(PFM_AUTO_POLICYHOLDER plhldr LEFT JOIN DWH_ADDRESS_MST addrss ON (plhldr.ADDRESS_CD = addrss.ADDRESS_CD))

		WHERE
		    /*ep_summ.EARNED_YYM >= '202401' AND/*★★★変更部分★★★*/
			ep_summ.EARNED_YYM <= '202507' AND/*★★★変更部分★★★*/
			/*fact.orig_policy_effective_date < TO_DATE('2024-01-01', 'YYYY-MM-DD') AND
			fact.orig_policy_expire_date >= TO_DATE('2023-01-01', 'YYYY-MM-DD') AND*/

			/*factテーブルのデータ（基本的には証券番号・枝番で一意となっているデータ）に対して、各証券番号・枝番のアーンド年月の情報を追加*/
			fact.KEY_POLICY_NO = ep_summ.KEY_POLICY_NO AND
			fact.KEY_POLICY_ITEMNO = ep_summ.KEY_POLICY_ITEMNO AND
			fact.KEY_ORIG_INS_EFFECT_YY = ep_summ.KEY_ORIG_INS_EFFECT_YY AND
			fact.KEY_COMPANY_CD = ep_summ.KEY_COMPANY_CD AND
			fact.KEY_EXTRACT_MASTER_FLG = ep_summ.KEY_EXTRACT_MASTER_FLG AND

			fact.PFM_AUTO_PRODUCT_KEY = product.PFM_AUTO_PRODUCT_KEY AND

			/*factテーブルのデータ（基本的には証券番号・枝番で一意となっているデータ）に対して、ミリタリーの情報を追加*/
			fact.PFM_AUTO_MILITARY_KEY = military.PFM_AUTO_MILITARY_KEY AND
			fact.PFM_AUTO_POLICYHOLDER_KEY = plhldr.PFM_AUTO_POLICYHOLDER_KEY


        GROUP BY
		    /*分析に必要な集計キーはここから*/
			fact.KEY_POLICY_NO,
			fact.KEY_POLICY_ITEMNO,
			fact.KEY_ORIG_INS_EFFECT_YY,
			fact.KEY_COMPANY_CD,
			fact.KEY_EXTRACT_MASTER_FLG,
			fact.ORIG_INS_COMPANY_CD,
			fact.NEW_RENEWAL_TYP, /*added 20250730*/
			ep_summ.EARNED_YYM,
		    product.AUTO_PRODUCT_CD,
			product.FLEET_FLG,
			product.PRODUCT_NAME,
			military.MILITARY_CARCLASS_CD,
			military.MILITARY_GRADE_CD,
			military.MILITARY_OD_A_INSURED_AMT,
			military.MILITARY_OD_A_PRM,
			military.MILITARY_OD_B_INSURED_AMT,
			military.MILITARY_OD_B_PRM,
			military.MILITARY_DISCOUNT_RATE,
			military.MILITARY_SHORTTERM_RATE,
			military.MILITARY_AO_CD,
			plhldr.CRESTA_ZONE,
			plhldr.CRESTA_CD,
			plhldr.AREA_NAME,
			plhldr.ADDRESS_CD,
			addrss.ADDRESS_NAME_KN,
			addrss.ADDRESS_NAME_KJ,
			addrss.NEW_ZIP
			/*分析に必要な集計キーはここまで*/
	) ;

	DISCONNECT FROM aiuprod ;
QUIT ;


DATA sasds.data_11 ;
SET sasds.data_1 ;

/*AIG契約のみに限定*/
IF ORIG_INS_COMPANY_CD = 3 ;

/*Coverage毎のNOVEを計算*/
IF bi_ep > 0 THEN bi_nove = total_nove ;
ELSE bi_nove = 0 ;

IF pd_ep > 0 THEN pd_nove = total_nove ;
ELSE pd_nove = 0 ;

IF pa_ep > 0 THEN pa_nove = total_nove ;
ELSE pa_nove = 0 ;

IF pic_ep > 0 THEN pic_nove = total_nove ;
ELSE pic_nove = 0 ;

IF od_ep > 0 THEN od_nove = total_nove ;
ELSE od_nove = 0 ;

IF escortp_ep > 0 THEN escortp_nove = total_nove ;
ELSE escortp_nove = 0 ;

IF bike50cc_ep > 0 THEN bike50cc_nove = total_nove ;
ELSE bike50cc_nove = 0 ;

IF others_ep > 0 THEN others_nove = total_nove ;
ELSE others_nove = 0 ;

RUN ;

/*証券番号、枝番ごとのアーンド保険料に集計*/
%Create_Cube_Data(
sasds.data_11,/*インプットデータ*/
sasds.data_2,/*アウトプットデータ*/
EARNED_YYM
KEY_POLICY_NO/*集計キー*/
KEY_POLICY_ITEMNO
KEY_ORIG_INS_EFFECT_YY
KEY_COMPANY_CD
KEY_EXTRACT_MASTER_FLG
AUTO_PRODUCT_CD
FLEET_FLG
PRODUCT_NAME
ORIG_INS_COMPANY_CD
NEW_RENEWAL_TYP/*added 20250730*/
ADDRESS_CD
ADDRESS_NAME_KJ
NEW_ZIP
, 
bi_ep/*集計項目*/
pd_ep
pa_ep
pic_ep
od_ep
escortp_ep
bike50cc_ep
others_ep
total_ep
bi_nove
pd_nove
pa_nove
pic_nove
od_nove
escortp_nove
bike50cc_nove
others_nove
total_nove) ;


PROC IMPORT OUT = sasds.yubin_geocode_1 
 	DATAFILE= "\\10.27.0.159\rate_e\sasds\sas009\ss\梅田さんからの依頼\20250708\YUBIN_GEOCODE.xlsx"
	DBMS = xlsx replace;
	GETNAMES = YES; 
RUN;

PROC SORT DATA= sasds.data_2 ;
BY
NEW_ZIP
EARNED_YYM
KEY_POLICY_NO/*集計キー*/
KEY_POLICY_ITEMNO
KEY_ORIG_INS_EFFECT_YY
KEY_COMPANY_CD
KEY_EXTRACT_MASTER_FLG
AUTO_PRODUCT_CD
FLEET_FLG
PRODUCT_NAME
ORIG_INS_COMPANY_CD
NEW_RENEWAL_TYP/*added 20250730*/
ADDRESS_CD
ADDRESS_NAME_KJ
;
RUN ;

PROC SORT DATA=sasds.yubin_geocode_1 ;
BY
postal_cd
;
RUN ;

DATA sasds.yubin_geocode_2 ;
SET sasds.yubin_geocode_1 ;
new_zip = postal_cd ;
RUN ;

DATA sasds.data_3 ;
MERGE sasds.data_2(IN=flg) sasds.yubin_geocode_2 ;
BY new_zip ;
IF flg ;
RUN ;


%Create_Cube_Data(
sasds.data_3,/*インプットデータ*/
sasds.data_31,/*アウトプットデータ*/
EARNED_YYM
KEY_POLICY_NO/*集計キー*/
KEY_POLICY_ITEMNO
KEY_ORIG_INS_EFFECT_YY
KEY_COMPANY_CD
KEY_EXTRACT_MASTER_FLG
AUTO_PRODUCT_CD
FLEET_FLG
PRODUCT_NAME
ORIG_INS_COMPANY_CD
NEW_RENEWAL_TYP/*added 20250730*/
ADDRESS_CD
ADDRESS_NAME_KJ
NEW_ZIP
fX
fY
, 
bi_ep/*集計項目*/
pd_ep
pa_ep
pic_ep
od_ep
escortp_ep
bike50cc_ep
others_ep
total_ep
bi_nove
pd_nove
pa_nove
pic_nove
od_nove
escortp_nove
bike50cc_nove
others_nove
total_nove) ;
