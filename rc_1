library(readxl)
library(ChainLadder)
library(tidyverse)
library(writexl)
library(fitdistrplus)
library(ggplot2)
library(evir)
library(actuar)

setwd("C:/Users/ssagara/OneDrive - American International Group, Inc/個人賠償_unlimited_こども保険")

df_clm <- read_excel("CLM_LIAB_SCHOOL.xlsx")

meplot(df_clm$LOSS)

set.seed(123)

# 1. ロスデータの読み込みと準備


loss <- df_clm %>% 
  filter(LOSS > 1.8*10^7)

loss_data <- loss$LOSS

#test <- df_clm %>% 
#  arrange(desc(loss_data))

# 2. 適切な分布のフィッティング
# 対数正規分布をロスデータにフィットします
fit_lnorm <- fitdist(loss_data, "lnorm")
# フィット結果の確認
summary(fit_lnorm)
plot(fit_lnorm)
summary(loss_data)

par(mfrow = c(2, 2), mar = c(4, 4, 2, 1))
fw <- fitdist(loss_data, "weibull")
fln <- fitdist(loss_data, "lnorm")
fga <- fitdist(loss_data, "gamma")
fp <- fitdist(loss_data, "pareto", start = list(shape = 10, scale = 10), 
        lower = 2+1e-6, upper = Inf)
fgum <- fitdist(loss_data, "gumbel")

plot.legend <- c("Weibull", "lognormal","gamma", "pareto", "gumbel")
denscomp(list(fw, fln, fga, fp, fgum), legendtext = plot.legend)
qqcomp(list(fw, fln, fga, fp, fgum), legendtext = plot.legend)
cdfcomp(list(fw, fln, fga, fp, fgum), legendtext = plot.legend)
ppcomp(list(fw, fln, fga, fp, fgum), legendtext = plot.legend)
gofstat(list(fw, fln, fga, fp, fgum), fitnames=c("Weibull", "lognormal","gamma", "pareto", "gumbel"))



# 3. 分布パラメータの調整
# 市場データから得られる50年に一度の損害額を設定
market_50yr_loss <- 10000000000  # 例として1億円とします

# 50年に一度の超過確率を計算
exceedance_prob_50yr <- (1050000 * 0.19) / 17700000 * 0.1 * 0.01

# フィットした分布からの推定値を取得
estimated_50yr_loss <- qlnorm(1 - exceedance_prob_50yr, meanlog = fit_lnorm$estimate["meanlog"], sdlog = fit_lnorm$estimate["sdlog"])

# 分布パラメータを調整して、市場データの50年損害額に一致させる
# 目的関数を定義（推定値と市場データの差の二乗和を最小化）
objective_function <- function(params) {
  meanlog_adj <- params[1]
  sdlog_adj <- params[2]
  estimated_loss <- qlnorm(1 - exceedance_prob_50yr, meanlog = meanlog_adj, sdlog = sdlog_adj)
  return((estimated_loss - market_50yr_loss)^2)
}

# 最適化の初期値を設定
initial_params <- as.list(fit_lnorm$estimate)
initial_values <- c(initial_params$meanlog, initial_params$sdlog)

# 最適化の実行
optim_result <- optim(par = initial_values, fn = objective_function)

# 調整済みパラメータの取得
meanlog_adj <- optim_result$par[1]
sdlog_adj <- optim_result$par[2]

# 4. リスクカーブの作成
# 再現期間と対応する超過確率を計算
return_periods <- seq(1, 100000, by = 1)
exceedance_probs <- 1 / return_periods

# 調整済み分布から損害額を推定
loss_estimates <- qlnorm(1 - exceedance_probs, meanlog = meanlog_adj, sdlog = sdlog_adj)

#loss_estimates <- qlnorm(1 - exceedance_probs, meanlog = initial_params$meanlog, sdlog = initial_params$sdlog)

# リスクカーブのデータフレームを作成
risk_curve <- data.frame(
  ReturnPeriod = return_periods,
  LossAmount = loss_estimates
)
PML_200 <- risk_curve[risk_curve$ReturnPeriod == 200,2]
scenario_RP <- round(1 / exceedance_prob_50yr, 0)
PML_scenario <- risk_curve[risk_curve$ReturnPeriod == round(1 / exceedance_prob_50yr, 0),2]



# リスクカーブのプロット
ggplot(risk_curve, aes(x = ReturnPeriod, y = LossAmount)) +
  geom_line(color = "blue") +
  geom_point(data = data.frame(ReturnPeriod = scenario_RP, LossAmount = market_50yr_loss), 
             aes(x = ReturnPeriod, y = LossAmount), color = "red", size = 3) +
  geom_text(data = data.frame(ReturnPeriod = scenario_RP, LossAmount = PML_scenario), 
            aes(label = scales::comma(PML_scenario/10^6)), vjust = -1, size = 3) +
  geom_point(data = data.frame(ReturnPeriod = 200, LossAmount = PML_200), 
             aes(x = ReturnPeriod, y = LossAmount), color = "red", size = 3) +
  geom_text(data = data.frame(ReturnPeriod = 200, LossAmount = PML_200), 
            aes(label = scales::comma(PML_200/10^6)), vjust = -1, size = 3) +
  scale_y_continuous(labels = scales::comma) +
  labs(title = "リスクカーブ",
       x = "再現期間（年）",
       y = "損害額（円）") +
  theme_minimal()



